name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  GO_VERSION: '1.21'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install cosign
      uses: sigstore/cosign-installer@v3

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sign container images
      run: |
        cosign sign --yes ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        cosign sign --yes ghcr.io/${{ github.repository }}:latest
      env:
        COSIGN_EXPERIMENTAL: 1

  homebrew:
    name: Update Homebrew
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Update Homebrew formula
      uses: dawidd6/action-homebrew-bump-formula@v3
      with:
        token: ${{ secrets.HOMEBREW_TOKEN }}
        formula: fast-cc-hooks
        tag: ${{ github.ref }}
        revision: ${{ github.sha }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [release, homebrew]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.release.result == 'success'
      run: |
        echo "Release ${{ github.ref_name }} completed successfully!"
        # Add notification logic here (Slack, Discord, etc.)
        
    - name: Notify on failure
      if: needs.release.result == 'failure'
      run: |
        echo "Release ${{ github.ref_name }} failed!"
        # Add failure notification logic here